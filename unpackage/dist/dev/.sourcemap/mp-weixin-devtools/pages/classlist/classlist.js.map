{"version":3,"names":["wallList","common_vendor","ref","noData","queryParams","pageNum","pageSize","pageName","getWallList","_ref","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","data","result","wrap","_callee$","_context","prev","next","api_apis","apiGetWallList","sent","value","concat","_toConsumableArray2","length","index","setStorageSync","stop","_x","apply","arguments","onLoad","e","_e$id","id","_e$name","name","classid","setNavigationBarTitle","title","onReachBottom","onMounted","onShareAppMessage","path","onShareTimeline","query","wx","createPage","MiniProgramPage"],"sources":["classlist.vue","cGFnZXMvY2xhc3NsaXN0L2NsYXNzbGlzdC52dWU"],"sourcesContent":["<template>\n\t<view class=\"classlist\">\r\n\t\t<!-- 加载组件:在初始页面加载且有数据可请求到时显示 -->\r\n\t\t<view class=\"loadingLayout\" v-if=\"!wallList.length && !noData\">\r\n\t\t\t<uni-load-more status=\"loading\"></uni-load-more>\r\n\t\t</view>\n\t\t<view class=\"content\">\r\n\t\t\t<navigator :url=\"`/pages/preview/preview?id=${item._id}`\" class=\"item\" v-for=\"item in wallList\" :key=\"item._id\">\r\n\t\t\t\t<image :src=\"item.smallPicurl\" mode=\"aspectFill\"></image>\r\n\t\t\t</navigator>\r\n\t\t</view>\r\n\t\t<!-- 加载组件:初始页面加载时不显示 -->\r\n\t\t<view class=\"loadingLayout\" v-if=\"wallList.length\">\r\n\t\t\t<uni-load-more :status=\"noData ? 'noMore':'loading'\"></uni-load-more>\r\n\t\t</view>\r\n\t\t<!-- 小程序底部安全区域(home键) -->\r\n\t\t<view class=\"safe-area-inset-bottom\"></view>\n\t</view>\n</template>\n\n<script setup>\nimport {ref,onMounted} from 'vue'\r\nimport {apiGetWallList} from '@/api/apis.js'\r\nimport { onLoad,onUnload,onShareAppMessage,onShareTimeline} from '@dcloudio/uni-app'\r\n// 存储当前图片列表数据\r\nconst wallList = ref([])\r\n// 定义当前是否需要跳过这次请求发送\r\nconst noData = ref(false)\r\n// 获取图片列表的参数信息\r\nconst queryParams = ref({\r\n\tpageNum:1,   // 记录当前获取到哪一页的数据\r\n\tpageSize:12\r\n})\r\nconst pageName = ref()\r\n// 获取当前图片列表数据\r\nconst getWallList = async(data) =>{\r\n\tlet result = await apiGetWallList(data)\r\n\t// 将新获取到的数据和先前的数据做一个整合\r\n\twallList.value = [...wallList.value,...result.data]\r\n\tif(result.data.length !== queryParams.value.pageSize){\r\n\t\tnoData.value = true\r\n\t}\r\n\tuni.setStorageSync('picList',wallList.value)\r\n}\r\n// 使用onLoad生命周期钩子来获取页面传递的参数\r\nonLoad((e)=>{\r\n\tlet {id=null,name=null} = e;\r\n\tpageName.value = name\r\n\tqueryParams.value.classid = id\r\n\tuni.setNavigationBarTitle({\r\n\t\ttitle:name\r\n\t})\r\n})\r\n// 触底回调\r\nonReachBottom(()=>{\r\n\tif(noData.value) return;\r\n\tqueryParams.value.pageNum++;\r\n\tgetWallList(queryParams.value)\r\n})\r\n// 在组件挂载后发送请求\r\nonMounted(()=>{\r\n\tgetWallList(queryParams.value)\r\n})\r\n\r\n// 分享给好友\nonShareAppMessage(()=>{\n\treturn {\n\t\ttitle:`adiu-${pageName.value}`,\n\t\tpath:`/pages/classlist/classlist?id=${queryParams.value.classid}&name=${pageName.value}`\n\t}\n})\n// 分享到朋友圈\nonShareTimeline(()=>{\n\treturn {\n\t\ttitle:\"adiu\",\r\n\t\tquery:`id=${queryParams.value.classid}&name=${pageName.value}`\n\t}\n})\r\n// 离开页面时删除本地存储中的列表\r\n// onUnload(()=>{\r\n// \tuni.removeStorageSync('picList')\r\n// })\n</script>\n\n<style lang=\"scss\" scoped>\r\n@import url('@/common/style/common-style.scss');\n.classlist{\r\n\t.content{\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: repeat(3,1fr);\r\n\t\tgap: 5rpx;\r\n\t\tpadding: 5rpx;\r\n\t\t.item{\r\n\t\t\theight: 440rpx;\r\n\t\t\timage{\r\n\t\t\t\twidth:100%;\r\n\t\t\t\theight: 100%;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}       \n</style>\n","import MiniProgramPage from 'D:/前端学习/前端项目/wallpaper/pages/classlist/classlist.vue'\nwx.createPage(MiniProgramPage)"],"mappings":";;;;;;;;;;;;;;;;;;;;;IAyBA,IAAAA,QAAA,GAAAC,aAAA,CAAAC,GAAA;IAEA,IAAAC,MAAA,GAAAF,aAAA,CAAAC,GAAA;IAEA,IAAAE,WAAA,GAAAH,aAAA,CAAAC,GAAA;MACAG,OAAA;MAAA;MACAC,QAAA;IACA;IACA,IAAAC,QAAA,GAAAN,aAAA,CAAAC,GAAA;IAEA,IAAAM,WAAA;MAAA,IAAAC,IAAA,GAAAC,kBAAA,eAAAC,oBAAA,GAAAC,IAAA,UAAAC,QAAAC,IAAA;QAAA,IAAAC,MAAA;QAAA,OAAAJ,oBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACAC,QAAA,CAAAC,cAAA,CAAAR,IAAA;YAAA;cAAAC,MAAA,GAAAG,QAAA,CAAAK,IAAA;cAEAvB,QAAA,CAAAwB,KAAA,MAAAC,MAAA,CAAAC,mBAAA,CAAA1B,QAAA,CAAAwB,KAAA,GAAAE,mBAAA,CAAAX,MAAA,CAAAD,IAAA;cACA,IAAAC,MAAA,CAAAD,IAAA,CAAAa,MAAA,KAAAvB,WAAA,CAAAoB,KAAA,CAAAlB,QAAA;gBACAH,MAAA,CAAAqB,KAAA;cACA;cACAvB,aAAA,CAAA2B,KAAA,CAAAC,cAAA,YAAA7B,QAAA,CAAAwB,KAAA;YAAA;YAAA;cAAA,OAAAN,QAAA,CAAAY,IAAA;UAAA;QAAA,GAAAjB,OAAA;MAAA,CACA;MAAA,gBARAL,YAAAuB,EAAA;QAAA,OAAAtB,IAAA,CAAAuB,KAAA,OAAAC,SAAA;MAAA;IAAA,GAQA;IAEAhC,aAAA,CAAAiC,MAAA,WAAAC,CAAA;MACA,IAAAC,KAAA,GAAAD,CAAA,CAAAE,EAAA;QAAAA,EAAA,GAAAD,KAAA,qBAAAA,KAAA;QAAAE,OAAA,GAAAH,CAAA,CAAAI,IAAA;QAAAA,IAAA,GAAAD,OAAA,qBAAAA,OAAA;MACA/B,QAAA,CAAAiB,KAAA,GAAAe,IAAA;MACAnC,WAAA,CAAAoB,KAAA,CAAAgB,OAAA,GAAAH,EAAA;MACApC,aAAA,CAAA2B,KAAA,CAAAa,qBAAA;QACAC,KAAA,EAAAH;MACA;IACA;IAEAI,aAAA;MACA,IAAAxC,MAAA,CAAAqB,KAAA;MACApB,WAAA,CAAAoB,KAAA,CAAAnB,OAAA;MACAG,WAAA,CAAAJ,WAAA,CAAAoB,KAAA;IACA;IAEAvB,aAAA,CAAA2C,SAAA;MACApC,WAAA,CAAAJ,WAAA,CAAAoB,KAAA;IACA;IAGAvB,aAAA,CAAA4C,iBAAA;MACA;QACAH,KAAA,UAAAjB,MAAA,CAAAlB,QAAA,CAAAiB,KAAA;QACAsB,IAAA,mCAAArB,MAAA,CAAArB,WAAA,CAAAoB,KAAA,CAAAgB,OAAA,YAAAf,MAAA,CAAAlB,QAAA,CAAAiB,KAAA;MACA;IACA;IAEAvB,aAAA,CAAA8C,eAAA;MACA;QACAL,KAAA;QACAM,KAAA,QAAAvB,MAAA,CAAArB,WAAA,CAAAoB,KAAA,CAAAgB,OAAA,YAAAf,MAAA,CAAAlB,QAAA,CAAAiB,KAAA;MACA;IACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EAyB,EAAA,CAAGC,UAAA,CAAWC,eAAe","ignoreList":[]}